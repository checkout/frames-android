import org.jetbrains.dokka.gradle.DokkaTask

plugins {
    id('com.android.library')
    id('kotlin-android')
    id("kotlin-parcelize")
    id('com.kezong.fat-aar')
    id('org.jetbrains.dokka')
    id('maven-publish')
}

android {
    compileSdkVersion 31
    defaultConfig {
        minSdkVersion 21
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "checkout-frames-proguard.pro"

        buildConfigField "String", "PRODUCT_VERSION", "\"$productVersion\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "Boolean", "DEFAULT_LOGCAT_MONITORING_ENABLED", "false"
        }
        debug {
            buildConfigField "Boolean", "DEFAULT_LOGCAT_MONITORING_ENABLED", "true"
        }
    }
}

dependencies {
    embed('com.checkout:checkout-sdk-event-logger-android:1.0.1-SNAPSHOT')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.5.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    ext.okHttpVersion = '4.9.0'
    implementation 'com.squareup.okhttp3:okhttp:' + ext.okHttpVersion
    implementation 'com.squareup.okhttp3:logging-interceptor:' + ext.okHttpVersion
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release

                artifactId productArtefactId
                version productVersion
                groupId productGroupId

                pom {
                    name = pomName
                    description = pomDescription
                    url = githubProjectUrl

                    licenses {
                        license {
                            name = 'MIT License'
                            url = "https://raw.githubusercontent.com/${githubProjectName}/master/LICENSE"
                        }
                    }
                    developers {
                        developer {
                            id = "mobile-team-cko"
                            name = "Checkout Mobile Team"
                        }
                    }
                }
            }
        }
    }
}

void configureDokkaTaskForDocsExport(DokkaTask dokkaTask, String targetDirName) {
    def targetDocsDir = file("$rootDir/docs/$targetDirName")
    dokkaTask.configure {
        doFirst {
            delete targetDocsDir
        }
        doLast {
            copy {
                from outputDirectory
                into targetDocsDir
            }
        }
    }
}

task dokkaBuildAndExportDocs(group: "documentation") {
    dependsOn("dokkaHtml", "dokkaJavadoc")

    tasks.dokkaHtml.finalizedBy {
        println("Finalize: $name")
    }
    configureDokkaTaskForDocsExport(tasks.dokkaHtml, "kotlin")
    configureDokkaTaskForDocsExport(tasks.dokkaJavadoc, "java")
}

tasks.withType(DokkaTask.class).configureEach {
    moduleName.set(docsTitle)
    moduleVersion.set(productVersion)
    suppressInheritedMembers.set(true)
    suppressObviousFunctions.set(true)

    dokkaSourceSets {
        configureEach {
            suppress.set(true)
        }

        named("main") {
            suppress.set(false)
            noAndroidSdkLink.set(false)

            displayName.set(docsDisplayName)
            skipEmptyPackages.set(true)
            suppress.set(false)
            reportUndocumented.set(true)

            includes.from("module.md")
        }
    }
}